@model SINU.Models.RegisterViewModel
@{
    ViewBag.Title = "Registrarse";

}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>@ViewBag.Inst</h4>



    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group has-error">
        @Html.LabelFor(m => m.Apellido, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Apellido, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Nombre, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DNI, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DNI, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id="Contraseña" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.IdInstituto, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.IdInstituto, (SelectList)Model.ListIntitutos, "--Seleccione Instituto a Incribirse--", htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.IdInstituto, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.idOficinaYDelegacion, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.idOficinaYDelegacion, (SelectList)Model.ListOficinaYDelegacion, "---Seleccione la mas cercana ---", htmlAttributes: new { @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(model => model.idOficinaYDelegacion, "", new { @class = "text-danger" })

        </div>
    </div>
    <br />

    @*<div class="form-group">
            @Html.LabelFor(model => model.Zona, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Zona, (SelectList)ViewBag.ListaZonas, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>*@

    //parametro enviado oculto al controlador para almacenar la preferencia


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Registrarse" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".selectpicker").selectpicker({
            size: 7,
            noneSelectedText: 'Ninguna Opcion Seleccionada'

        });
        $(document).ready( function () {
            $("#Contraseña").attr("data-toggle", "tooltip")
                            .attr("data-placement", "top")
                .attr("title", "Ingresá una clave de acceso que te resulte familiar y que utilizarás a lo largo del proceso, cada vez que tengas que acceder").tooltip({ 'trigger': 'focus' })

        });
    </script>
}
