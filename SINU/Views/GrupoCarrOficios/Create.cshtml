@model SINU.ViewModels.GrupoCarrOficiosvm

@{
    ViewBag.Title = "Grupo Carrera/Oficio";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> lst = new List<SelectListItem>();
    lst.Add(new SelectListItem() { Text = "Oficiales", Value = "O" });
    lst.Add(new SelectListItem() { Text = "Suboficiales", Value = "S" });
    lst.Add(new SelectListItem() { Text = "Marineros", Value = "M" });
}

<h2>Nuevo Registro</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>GrupoCarrOficio</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdGrupoCarrOficio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdGrupoCarrOficio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdGrupoCarrOficio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.Personal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Personal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Personal, "", new { @class = "text-danger" })
            </div>
        </div>*@
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Personal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Personal,new SelectList(lst.ToList(),"Value","Text"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Personal, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Carreras2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ var variable = new SelectList(Model.Carreras2, "IdCarreraOficio", "CarreraUoficio", 0);}
                @Html.ListBoxFor(model => model.SelectedIDs, new MultiSelectList(Model.Carreras2, "IdCarreraOficio", "CarreraUoficio", Model.SelectedIDs), htmlAttributes: new { @class = "multiselect form-control", @multiple = "multiple" })
            </div>
        </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink("Volver", "Index")
            </div>

            <!-- ***********************************************************************-->
            <!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
            <!-- ***********************************************************************-->
            <!--Para establecer Formato de Tabla-->
            <!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
            <!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
            <!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
            <!-- Rodear la tr de las th con <thead> </thead>-->
            <!-- Rodear el contenido de la tabla con <tbody>-->
            @section Scripts {
                <script type="text/javascript">
                    //scrip que permite buscar por cualquier campo en la tabla para su uso requiere que tabla tenga la propiedad id=myTable
                    $(document).ready(function () {
                        $(".table-filters").DataTable({
                            responsive: true,
                            "language":
                            {
                                "sProcessing": "Procesando...",
                                "sLengthMenu": "Mostrar _MENU_ registros",
                                "sZeroRecords": "No se encontraron resultados",
                                "sEmptyTable": "Ningún dato disponible en esta tabla",
                                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                                "sInfoPostFix": "",
                                "sSearch": "Buscar:",
                                "sUrl": "",
                                "sInfoThousands": ",",
                                "sLoadingRecords": "Cargando...",
                                "oPaginate": {
                                    "sFirst": "Primero",
                                    "sLast": "Último",
                                    "sNext": "Siguiente",
                                    "sPrevious": "Anterior"
                                },
                                "oAria": {
                                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                                }
                            },

                            "columnDefs": [{
                                "targets": 'no-sort',
                                "orderable": false
                            },
                            {
                                "targets": 'ni-o-ni-bu',
                                "searchable": false,
                                "orderable": false

                            }]


                        });

                    });
                </script>

            }
