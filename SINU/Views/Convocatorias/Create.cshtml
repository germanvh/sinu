@model SINU.Models.Convocatoria

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">*@
    @*<h4>Convocatoria</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table>
        <thead>
            <tr>
                <th>
                    @Html.LabelFor(model => model.IdPeriodoInscripcion, "IdPeriodoInscripcion", htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.IdModalidad, "IdModalidad", htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.LabelFor(model => model.IdGrupoCarrOficio, "IdGrupoCarrOficio", htmlAttributes: new { @class = "control-label col-md-2" })
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DropDownList("IdPeriodoInscripcion", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPeriodoInscripcion, "", new { @class = "text-danger" })
                </td>
                <td>@Html.ActionLink("Nuevo Periodo", "Create", "PeriodoInscripciones")</td>
                <td>
                    @Html.DropDownList("IdModalidad", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdModalidad, "", new { @class = "text-danger" })
            </td>
            @*<td>@Html.ActionLink("Nueva Modalidad ", "Create", "Modalidads")</td>*@
            <td>
                @Html.DropDownList("IdGrupoCarrOficio", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdGrupoCarrOficio, "", new { @class = "text-danger" })
            </td>
            @*<td>@Html.ActionLink("Nuevo Grupo Carrera", "Create","GrupoCarrOficios")</td>*@
        </tr>
    </tbody>
</table>
<p></p>

<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
</div>

}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->
@section Scripts {
    <script type="text/javascript">
        //scrip que permite buscar por cualquier campo en la tabla para su uso requiere que tabla tenga la propiedad id=myTable
        $(document).ready(function () {
            $(".table-filters").DataTable({
                responsive: true,
                "language":
                {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },

                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                },
                {
                    "targets": 'ni-o-ni-bu',
                    "searchable": false,
                    "orderable": false

                }]


            });

        });
    </script>


}


