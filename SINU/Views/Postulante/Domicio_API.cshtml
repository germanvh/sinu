@model SINU.ViewModels.Domiciolio_API

@{
    ViewBag.Title = "Domicio_API";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Domicio_API</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>vPersona_Domicilio</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
<div class="row">
    @Html.HiddenFor(model => model.vPersona_Domicilio_API.IdPersona)
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vPersona_Domicilio_API.Calle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Calle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vPersona_Domicilio_API.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Piso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vPersona_Domicilio_API.Piso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Piso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Unidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vPersona_Domicilio_API.Unidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Unidad, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-6">

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.IdPais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.vPersona_Domicilio_API.IdPais,Model.Pais_API, new { @class = "form-control combobox" })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.IdPais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Provincia, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.vPersona_Domicilio_API.Provincia, Model.Provincia_API, new { @class = "form-control combobox",@id="Provincia" })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Provincia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.Localidad, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.vPersona_Domicilio_API.Localidad, Model.Localidad_API,  new { @class = "form-control combobox localidad",@id="Localidad" })

                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.Localidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vPersona_Domicilio_API.CODIGO_POSTAL, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vPersona_Domicilio_API.CODIGO_POSTAL, new { htmlAttributes = new { @class = "form-control cpostal"} })
                @Html.ValidationMessageFor(model => model.vPersona_Domicilio_API.CODIGO_POSTAL, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

</div>
        @Html.HiddenFor(model => model.vPersona_Domicilio_API.EventualIdPais)

        @Html.HiddenFor(model => model.vPersona_Domicilio_API.IdDomicilioDNI)

        @Html.HiddenFor(model => model.vPersona_Domicilio_API.IdDomicilioActual)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Volver a la lista", "Index")
    </div>

    <style type="text/css">
        .combobox{
            max-width: 280px
        }
    </style>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>

           

            //http://api.zippopotam.us/#where

            //ver consulta Ciudad Autonoma de Buenos aires, non trae resultados
            var provi = [{ "Text": "Ciudad de Buenos Aires", "Value": "C" },
            { "Text": "Buenos Aires", "Value": "B" },
            { "Text": "Catamarca", "Value": "K" },
            { "Text": "Chaco", "Value": "H" },
            { "Text": "Chubut", "Value": "U" },
            { "Text": "Cordoba", "Value": "X" },
            { "Text": "Corrientes", "Value": "W" },
            { "Text": "Entre Ríos", "Value": "E" },
            { "Text": "Formosa", "Value": "P" },
            { "Text": "Jujuy", "Value": "Y" },
            { "Text": "La Pampa", "Value": "L" },
            { "Text": "La Rioja", "Value": "F" },
            { "Text": "Mendoza", "Value": "M" },
            { "Text": "Misiones", "Value": "N" },
            { "Text": "Neuquén", "Value": "Q" },
            { "Text": "Río Negro", "Value": "R" },
            { "Text": "Salta", "Value": "A" },
            { "Text": "San Juan", "Value": "J" },
            { "Text": "San Luis", "Value": "D" },
            { "Text": "Santa Cruz", "Value": "Z" },
            { "Text": "Santa Fe", "Value": "S" },
            { "Text": "Santiago del Estero", "Value": "G" },
            { "Text": "Tierra del Fuego", "Value": "V" },
            { "Text": "Tucuman", "Value": "T" },
            ];

            var prov;
            (function () {
                //alert("asdas");
                $.each(provi, function (i, item) {
                    $("#Provincia").append("<option value=" + item.Value + ">" + item.Text + "</option>");
                });
              
            })();
            $(".combobox").selectpicker({
                liveSearch: true,
                size: 7,
                liveSearchPlaceholder: "Ingrese su busqueda",
                liveSearchStyle: 'contains',//'startsWith'
                noneResultsText: 'No se Encuantran Resultados',
                noneSelectedText: 'Ninguna Opcion Seleccionada'
            });

            var client = new XMLHttpRequest();

            $(document).ready( function () {
                //alert("adasfregrgg");
                $("#Provincia").on('changed.bs.select', function () {
                    //alert($(this).val());
                    $("#Localidad").html("");
                    $("#Localidad").selectpicker('refresh');
                    prov = $(this).val();
                });

                $(".localidad").change( function (e, clickedIndex, isSelected, previousValue) {
                    //alert( $('.localidad option:selected').val());
                    $(".cpostal").val($('.localidad option:selected').val());
                });

                $("div.bs-searchbox input").keyup(function () {
                    //alert($(this).val());
                    var busqueda = $(this).val();
                    if (busqueda.length>2) {

                        client.open("GET", "https://api.zippopotam.us/ar/" + prov + "/" + busqueda, true);
                        
                        client.onreadystatechange = function () {
                            if (client.readyState == 4) {
                                //alert(client.responseText);
                                cargaLocalidades(client.responseText);
                            };
                        };
                       client.send();
                    }
                });

            });

            function cargaLocalidades(response) {
                $("#Localidad").html("");
                
                var jsonrespuesta = JSON.parse(response)
                $.each(jsonrespuesta.places, function (i, item) {
                    //alert(item["place name"] + item["post code"]);
                   
                    $("#Localidad").append("<option value=" + item["post code"] + ">" + item["place name"] + "</option>");
                    $("#Localidad").selectpicker('refresh');
                })
            };
         

           
           
        </script>
    }
